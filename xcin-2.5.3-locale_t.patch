--- doc/En/internal/module.En
+++ doc/En/internal/module.En
@@ -481,13 +481,13 @@
             char *lc_ctype;             /* LC_CTYPE locale category name */
             char *lc_messages;          /* LC_MESSAGES locale category name */
             char *encoding;             /* encoding name */
-        } locale_t;
+        } xcin_locale_t;
 
         typedef struct {
             char *rcfile;               /* rcfile name. */
             char *default_dir;          /* Default module directory. */
             char *user_dir;             /* User data directory. */
-            locale_t locale;            /* Locale name. */
+            xcin_locale_t locale;            /* Locale name. */
         } xcin_rc_t;
 
       The return value of this function is True when excuting successfully,
--- doc/internal/module
+++ doc/internal/module
@@ -415,13 +415,13 @@
 	    char *lc_ctype;		/* LC_CTYPE locale category name */
 	    char *lc_messages;		/* LC_MESSAGES locale category name */
 	    char *encoding;		/* encoding name */
-	} locale_t;
+	} xcin_locale_t;
 
 	typedef struct {
 	    char *rcfile;               /* rcfile name. */
 	    char *default_dir;          /* Default module directory. */
 	    char *user_dir;             /* User data directory. */
-	    locale_t locale;            /* Locale name. */
+	    xcin_locale_t locale;            /* Locale name. */
 	} xcin_rc_t;
 
       本函式若成功傳回 True, 失敗傳回 False。
--- src/include/xcintool.h
+++ src/include/xcintool.h
@@ -202,12 +202,12 @@
     char *lc_messages;
     char *encoding;
     int encid, locid;
-} locale_t;
+} xcin_locale_t;
 
 typedef struct {
     int argc;			/* Command line arguement list */
     char **argv;
-    locale_t locale;            /* Locale name. */
+    xcin_locale_t locale;            /* Locale name. */
     char *usrhome;		/* User home directory. */
     char *default_dir;          /* Default module directory. */
     char *user_dir;             /* User data directory. */
--- src/util/cin2tab/cin2tab.c
+++ src/util/cin2tab/cin2tab.c
@@ -233,7 +233,7 @@
 }
 
 static void
-cin2tab_setlocale(locale_t *locale)
+cin2tab_setlocale(xcin_locale_t *locale)
 {
     char loc_return[128], enc_return[128];
     int ret;
--- src/xcin_main.c
+++ src/xcin_main.c
@@ -56,7 +56,7 @@
 static void
 xcin_setlocale(void)
 {
-    locale_t *locale = &(xcin_core.xcin_rc.locale);
+    xcin_locale_t *locale = &(xcin_core.xcin_rc.locale);
     char loc_return[128], enc_return[128];
 
     set_perr("xcin");
@@ -324,7 +324,7 @@
     char *cmd[2], value[256], *s, loc_buf[64], *loc_name=NULL;
     char *fmt = N_("%s:\n\tlocale section \"%s\": %s: value not specified.\n");
     xcin_rc_t *xrc = &(xcin_core.xcin_rc);
-    locale_t *locale = &(xcin_core.xcin_rc.locale);
+    xcin_locale_t *locale = &(xcin_core.xcin_rc.locale);
 /*
  *  Determine the true locale setting name.
  */
@@ -401,7 +401,7 @@
     char *cmd[2], value[256], *s, *s1, objname[100], objenc[100];
     char *fmt = N_("%s:\n\tIM section \"%s\": %s: value not specified.\n");
     xcin_rc_t *xrc = &(xcin_core.xcin_rc);
-    locale_t *locale = &(xcin_core.xcin_rc.locale);
+    xcin_locale_t *locale = &(xcin_core.xcin_rc.locale);
     int setkey;
 /*
  *  Go to each CINPUT sub-node and read important keywords.
--- src/xim.c
+++ src/xim.c
@@ -1029,7 +1029,7 @@
     XIMTriggerKeys on_keys;
     XIMEncodings encodings;
     Window mainwin;
-    locale_t *locale;
+    xcin_locale_t *locale;
     int i;
 
     transport_type = TRANSPORT_X;
